library(grattan)
filter(residential_property_prices, City=='Brisbane')
head(residential_property_prices)
filter(residential_property_prices$City=='Brisbane')
filter(residential_property_prices,residential_property_prices$City=='Brisbane')
head(filter(residential_property_prices,residential_property_prices$City=='Brisbane'))
x <- residential_property_prices %>%
filter(City == 'Brisbane')
library(dplyr)
x <- residential_property_prices %>%
filter(City == 'Brisbane')
head(X)
head(X)
head(x)
residential_property_prices$City
residential_property_prices$City=='Brisbane'
?filter
y<-filter(residential_property_prices,residential_property_prices$City=='Brisbane')
head(y)
head(x)
UCBAdmissions
BrissieResidentialProperties <- subset(residential_property_prices, City = Brisbane,
select=c(Date,Residential_property_price_index))
ggplot(data = BrissieResidentialProperties, mapping=aes(x=as.factor(residential_property_prices))) +
geom_bar()
library(ggplot2)
BrissieResidentialProperties <- subset(residential_property_prices, City = Brisbane,
select=c(Date,Residential_property_price_index))
ggplot(data = BrissieResidentialProperties, mapping=aes(x=as.factor(residential_property_prices))) +
geom_bar()
BrissieResidentialProperties <- subset(residential_property_prices, City = Brisbane,
select=c(Date,Residential_property_price_index))
BrissieResidentialProperties
dim(BrissieResidentialProperties)
ggplot(data = BrissieResidentialProperties, mapping=aes(x=as.factor(residential_property_prices))) +
geom_bar()
BrissieResidentialProperties$Residential_property_price_index
ggplot(data = BrissieResidentialProperties, mapping=aes(x=as.factor(Residential_property_price_index))) +
geom_bar()
# set the base directory for knitr to the directory above this one
# install.packages(c("knitr", "Bchron", "car", "ggplot2", "reshape2", "dplyr"))
library(knitr)
opts_knit$set(root.dir = '../', progress = FALSE)
# see the output of sessionInfo() at the bottom for package version numbers
library(Bchron)
install.packages("Bchron")
# see the output of sessionInfo() at the bottom for package version numbers
library(Bchron)
library(Bchron)
install.packages("mclust")
install.packages("Bchron")
library(mclust)
install.packages("mclust")
# install.packages("devtools")
devtools::install_github("jamesgrecian/mapr")
# load libraries
require(tidyverse)
require(sf)
require(mapr)
# load example dataset
data(ellie)
# define an appropriate proj.4 projection
prj <- '+proj=laea +lat_0=-60 +lon_0=70 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs'
# use mapr to generate a shapefile
world_shp <- mapr(ellie, prj, buff = 1e6)
devtools::install_github("jamesgrecian/mapr")
