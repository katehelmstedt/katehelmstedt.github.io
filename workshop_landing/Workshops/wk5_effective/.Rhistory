ggplot(mpg, aes(displ, hwy)) +
geom_point()
library(ggplot2)
ggplot(mpg, aes(displ, hwy)) +
geom_point()
# aes() within geom_point()
ggplot(mpg) +
geom_point(aes(displ, hwy))
# aes() within geom_point()
ggplot(mpg) +
geom_point(aes(displ, hwy)) # aes() within geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(displ, hwy))
# aes() within geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(displ, hwy))
head(pmg)
head(mpg)
# aes() in both geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(displ, city))
# aes() in both geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(displ, cty))
# aes() within geom_point()
ggplot(mpg) +
geom_point(aes(displ, hwy))
irislabels <- iris %>%
group_by(Species) %>%
summarize_all(mean)
library(tidyr)
irislabels <- iris %>%
group_by(Species) %>%
summarize_all(mean)
library(dplyr)
irislabels <- iris %>%
group_by(Species) %>%
summarize_all(mean)
irislabels
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color = Species)) +
geom_point() + geom_text(data  = irislabels, aes(x=Sepal.Length, y=Sepal.Width, label = Species)) +
theme(legend.position = "none")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color = Species)) +
geom_point() + ggthemes::theme_fivethirtyeight()
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color = Species)) +
geom_point() + theme_fivethirtyeight()
install.packages("ggtheme")
install.packages("ggthemes")
install.packages("ggthemes")
library(ggthemes)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color = Species)) +
geom_point() + theme_fivethirtyeight()
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color = Species)) +
geom_point() + ggthemes::theme_fivethirtyeight()
# Libraries
library(tidyverse)
library(hrbrthemes)
library(kableExtra)
options(knitr.table.format = "html")
# Load dataset from github
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum.csv", header=TRUE, sep=",")
# Plot
data %>%
filter(!is.na(Value)) %>%
ggplot( aes(x=Country, y=Value) ) +
geom_segment( aes(x=Country ,xend=Country, y=0, yend=Value), color="grey") +
geom_point(size=3, color="#69b3a2") +
coord_flip() +
theme_ipsum() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("")
install.packages("hrbrthemes")
install.packages("kableExtra")
library(hrbrthemes)
library(kableExtra)
options(knitr.table.format = "html")
# Load dataset from github
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum.csv", header=TRUE, sep=",")
# Plot
data %>%
filter(!is.na(Value)) %>%
ggplot( aes(x=Country, y=Value) ) +
geom_segment( aes(x=Country ,xend=Country, y=0, yend=Value), color="grey") +
geom_point(size=3, color="#69b3a2") +
coord_flip() +
theme_ipsum() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("")
data %>%
filter(!is.na(Value)) %>%
ggplot( aes(x=Country, y=Value) ) +
geom_segment( aes(x=Country ,xend=Country, y=0, yend=Value), color="grey") +
geom_point(size=3, color="#69b3a2") +
coord_flip() +
theme_ipsum() +
xlab("")
data %>%
filter(!is.na(Value)) %>%
ggplot( aes(x=Country, y=Value) ) +
geom_segment( aes(x=Country ,xend=Country, y=0, yend=Value), color="grey") +
geom_point(size=3, color="#69b3a2") +
coord_flip()
# Plot
data %>%
filter(!is.na(Value)) %>%
ggplot( aes(x=Country, y=Value) ) +
geom_segment( aes(x=Country ,xend=Country, y=0, yend=Value), color="grey") +
geom_point(size=3, color="#69b3a2")
data %>%
filter(!is.na(Value)) %>%
ggplot( aes(x=Country, y=Value) ) +
geom_segment( aes(x=Country ,xend=Country, y=0, yend=Value), color="grey")
# Plot
data %>%
filter(!is.na(Value)) %>%
ggplot( aes(x=Country, y=Value) ) +
geom_segment( aes(x=Country ,xend=Country, y=0, yend=Value), color="grey") +
geom_point(size=3, color="#69b3a2")
head(data)
sum(is.na(data$Value))
stg <- data.frame(StudentID = c( rep("A", 2), rep("B", 3), rep("A", 2), rep("C", 5), rep("D", 2)  ),
SectorID  = c(rep("Team_1", 3), rep("Team_2", 3), rep("Team_3", 5), rep("Team_1", 3)),
ClassID     = c(rep("Class_1", 7), rep("Class_2", 7) )
)
stg
ggplot(stg, aes( x = stg$StudentID) ) + geom_bar()
stg
cnt <- plyr::count(stg$StudentID)
cnt
cnt <- count(stg$StudentID)
?::
::
library(plyr)
cnt <- count(stg$StudentID)
cnt
class(cnt)
head(StudentID)
head(stg$StudentID)
class(stg$StudentID)
cnt$x
class(ct)
class(cnt)
cnt
cnt$x[order(cnt$freq, decreasing = TRUE)]
cnt$freq
order(cnt$freq, decreasing = TRUE)
order(c(10,8,9))
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
stg <- data.frame(StudentID = c( rep("A", 2), rep("B", 3), rep("A", 2), rep("C", 5), rep("D", 2)  ),
SectorID  = c(rep("Team_1", 3), rep("Team_2", 3), rep("Team_3", 5), rep("Team_1", 3)),
ClassID     = c(rep("Class_1", 7), rep("Class_2", 7) )
)
head(stg)
ggplot(stg, aes( x = stg$StudentID) ) +
geom_bar()
head(stg)
ggplot(stg, aes( x = stg$StudentID) ) +
geom_bar()
head(stg$StudentID)
class(stg$StudentID)
cnt <- count(stg$StudentID)
cnt
cnt$freq
order(c(10,8,9))
?factor
order(cnt$freq)
cnt$x[order(cnt$freq)]
stg$StudentID <- factor(stg$StudentID,
levels = cnt$x[order(cnt$freq)])
ggplot(stg, aes( x = StudentID) ) + geom_bar()
stg$StudentID <- factor(stg$StudentID,
levels = cnt$x[order(cnt$freq)])
ggplot(stg, aes( x = StudentID) ) + geom_bar()
stg$StudentID <- factor(stg$StudentID,
levels = cnt$x[order(cnt$freq), descending=TRUE])
stg$StudentID <- factor(stg$StudentID,
levels = cnt$x[order(cnt$freq, descending=TRUE)])
stg$StudentID <- factor(stg$StudentID,
levels = cnt$x[order(cnt$freq, descending=TRUE)])
stg$StudentID <- factor(stg$StudentID,
levels = cnt$x[order(cnt$freq, decreasing = =TRUE)])
stg$StudentID <- factor(stg$StudentID,
levels = cnt$x[order(cnt$freq, decreasing=TRUE)])
ggplot(stg, aes( x = StudentID) ) + geom_bar()
install.packages('remedy')
ggplot(mobility_australia,
aes(date, score)) +
geom_line()+
ggtitle("In April many of us were sad :(")  +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = "bold", margin = margin(10,0,10,0) ))
library(ggplot2)
ggplot(mobility_australia,
aes(date, score)) +
geom_line()+
ggtitle("In April many of us were sad :(")  +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = "bold", margin = margin(10,0,10,0) ))
library(tidyverse)
library(ggthemes)
library(viridis)
library(ggplot2)
library(ggrepel)
library(ozmaps)
install.packages('ozmaps')
library(tidyverse)
library(ggthemes)
library(viridis)
library(ggplot2)
library(ggrepel)
library(ozmaps)
install.packages('covdata')
remotes::install_github("kjhealy/covdata@main")
library(covdata)
#  Australia's data
mobility_australia <- apple_mobility %>%
filter(region == 'Australia', transportation_type == 'driving')
# Australia's data by state
mobility_states <- apple_mobility %>%
filter(region %in% ozmap_states$NAME, transportation_type == 'driving') # note that I have used the `%in%` command here instead of the `==` above -- this   will filter for any words in the vector, which here is the whole list of Australian state names
ggplot(mobility_australia,
aes(date, score)) +
geom_line()+
ggtitle("In April many of us were sad :(")  +
theme(plot.title = element_text(hjust = 0.5, size = 20,
face = "bold", margin = margin(10,0,10,0) ))
g <- ggplot(mobility_australia,
aes(date, score)) +
geom_line()
g + theme(legend.title = element_blank())
g
g + theme(legend.title = element_blank())
ggplot(mobility_states,
aes(date, score, color=region)) +
geom_line()
g <- ggplot(mobility_states,
aes(date, score, color=region)) +
geom_line()
g + theme(legend.title = element_blank())
g + theme(legend.title = element_text(colour="chocolate", size=16, face="bold"))
g + labs(color = "This is a different legend title")
ggplot(top10, aes(time, cum_confirm, color=country)) +
geom_line()  +
theme(legend.title = element_text(colour="chocolate", size=16, face="bold")) +
labs(color = "Australian State")
ggplot(mobility_states,
aes(date, score, color=region)) +
geom_line()   +
theme(legend.title = element_text(colour="chocolate", size=16, face="bold")) +
labs(color = "Australian State")
axis_labels <- ggplot(mobility_states,
aes(date, score, color=region)) +
geom_line()  +
labs(x = "Time", y = "Cumulative confirmed cases")
axis_labels
ggplot(mobility_australia,
aes(date, score)) +
geom_line()
ggplot(mobility_australia,
aes(date, score)) +
geom_line() + ylim(0,100)
mobility_australia$date
ggplot(mobility_australia,
aes(date, score)) +
geom_line() + xlim("2020-01-13", "2020-06-08")
ggplot(mobility_australia,
aes(date, score)) +
geom_line()
ggplot(mobility_australia,
aes(date, score)) +
geom_line() + xlim("2020-01-13", "2020-06-08")
ggplot(mobility_australia,
aes(date, score)) +
geom_line() + xlim(c("2020-01-13", "2020-06-08"))
ggplot(mobility_australia,
aes(date, score)) +
geom_line() + xlim("2020-01-13", "2020-06-08")
ggplot(mobility_australia,
aes(date, score)) +
geom_line() + xlim(as.date("2020-01-13", "2020-06-08"))
